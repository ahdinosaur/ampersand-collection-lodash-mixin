var handlers = require('./handlers');

module.exports = [
    // arrays
    'compact',
    'difference',
    ['drop', 'rest'],
    ['findIndex', handlers.property],
    ['find', handlers.property],
    ['findLastIndex', handlers.property],
    ['first', handlers.propertyOrNumber],
    ['flatten', handlers.propertyWithFlag],
    ['head', 'first'],
    'indexOf',
    ['initial', handlers.propertyOrNumber],
    'intersection',
    ['last', handlers.propertyOrNumber],
    'lastIndexOf',
    ['object', 'zipObject'],
    'pull',
    'range',
    //['remove', handlers.property],
    ['rest', handlers.propertyOrNumber],
    'sortedIndex',
    ['tail', 'rest'],
    ['take', 'first'],
    'union',
    ['uniq', handlers.propertyWithFlag],
    ['unique', 'uniq'],
    ['unzip', 'zip'],
    'without',
    'xor',
    'zip',
    'zipObject',

    // collections
    ['all', 'every'],
    ['any', 'some'],
    //'at',
    ['collect', 'map'],
    'contains',
    ['countBy', handlers.property],
    ['detect', 'find'],
    ['each', 'forEach'],
    ['eachRight', 'forEachRight'],
    ['every', handlers.property],
    ['filter', handlers.property],
    ['find', handlers.property],
    ['findLast', handlers.property],
    ['findWhere', handlers.property],
    ['foldl', 'reduce'],
    ['foldr', 'reduceRight'],
    'forEach',
    'forEachRight',
    ['groupBy', handlers.property],
    ['include', 'contains'],
    ['indexBy', handlers.property],
    ['inject', 'reduce'],
    'invoke',
    ['map', handlers.property],
    ['max', handlers.property],
    ['min', handlers.property],
    ['pluck', handlers.pluck],
    'reduce',
    'reduceRight',
    ['reject', handlers.property],
    'sample',
    ['select', 'filter'],
    'shuffle',
    'size',
    ['some', handlers.property],
    ['sortBy', handlers.property],
    'toArray',
    ['where', 'filter'],

    // objects
    'isEmpty',
    'chain',
];
